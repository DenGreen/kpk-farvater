import React, { useRef } from 'react';
import { NavLink } from 'react-router-dom';
import { navArrNew } from '../../data/NavDb';

const NavMobil = () => {
  const checkedStatusInput = useRef(null);
  const body = document.querySelector('body');

  const bodyDisable = () => {
    if (checkedStatusInput.current.checked) {
      body.classList.add('modal-open');
      return;
    }
    body.classList.remove('modal-open');
  };

  const changeMenu = (e) => {
    checkedStatusInput.current.checked = false;
    body.classList.remove('modal-open');
    const subMenuAll = document.querySelectorAll('.nav__item_active');

    if (subMenuAll.length > 0) {
      const arr = Array.from(subMenuAll);
      arr.forEach((value) => value.classList.remove('nav__item_active'));
    }
  };

  const changeActiveSubMenu = (e) => {
    const navItem = e.target.closest('.nav__item');
    const subMenu = e.target
      .closest('.nav__item')
      .querySelector('.nav__sub-menu'); // смотрим на наличие у меню subMenu

    if (subMenu) {
      navItem.classList.toggle('nav__item_active');
    }
  };

  const changeDropDownMenu = (e) => {
    e.preventDefault();
  };

  return (
    <section className="mobil section-box">
      <input
        className="checkbox"
        ref={checkedStatusInput}
        type="checkbox"
        onClick={bodyDisable}
      />
      <div className="hamburger">
        <span className="line line1"></span>
        <span className="line line2"></span>
        <span className="line line3"></span>
        <span className="line line4"></span>
      </div>
      <nav className="nav width-adaptiv">
        <div className="nav__box">
          <div className="nav__info">
            <a className="nav__info-phone" href="tel:+70000000000">
              +7 (000) 000-00-00
            </a>
            <a
              className="nav__info-viber"
              href="viber://chat?number=70000000000"
            >
              <svg
                width="36"
                height="36"
                viewBox="0 0 36 36"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M31 0H5C2.23858 0 0 2.23858 0 5V31C0 33.7614 2.23858 36 5 36H31C33.7614 36 36 33.7614 36 31V5C36 2.23858 33.7614 0 31 0Z"
                  fill="#7D3DAF"
                />
                <path
                  d="M29.3851 11.604L29.378 11.5756C28.8029 9.2508 26.2103 6.75617 23.8294 6.23718L23.8026 6.23165C19.9516 5.497 16.0469 5.497 12.1968 6.23165L12.1691 6.23718C9.78903 6.75617 7.19645 9.2508 6.62058 11.5756L6.61426 11.604C5.90332 14.8507 5.90332 18.1431 6.61426 21.3898L6.62058 21.4182C6.985 22.8894 8.15698 24.428 9.57167 25.4911C10.7996 26.4139 11.8634 27.7374 11.8634 29.2735V29.2735C11.8634 30.2127 13.008 30.674 13.6589 29.9963L15.1011 28.4972C15.8547 27.7138 16.9126 27.3128 17.9997 27.3128V27.3128C19.9382 27.3128 21.8775 27.1296 23.8026 26.7623L23.8294 26.7567C26.2103 26.2377 28.8029 23.7431 29.378 21.4183L29.3851 21.3899C30.096 18.1431 30.096 14.8507 29.3851 11.604ZM27.3044 20.919C26.9205 22.4357 24.9519 24.3213 23.3878 24.6696C21.3402 25.059 19.2764 25.2254 17.2147 25.1683C17.1737 25.1672 17.1343 25.1831 17.1057 25.2125C16.8135 25.5124 15.1905 27.1785 15.1859 27.1832C15.1858 27.1834 15.1858 27.1833 15.1857 27.1834L13.1439 29.2789C12.9946 29.4345 12.7323 29.3287 12.7323 29.1138V24.8148C12.7323 24.7438 12.6816 24.6835 12.6119 24.6698C12.6115 24.6697 12.6111 24.6696 12.6107 24.6695C11.0466 24.3212 9.07888 22.4356 8.69418 20.9189C8.05432 17.9843 8.05432 15.0094 8.69418 12.0748C9.07888 10.5581 11.0466 8.67248 12.6107 8.32412C16.1868 7.64398 19.8126 7.64398 23.3878 8.32412C24.9527 8.67248 26.9205 10.5581 27.3044 12.0748C27.9449 15.0095 27.9449 17.9844 27.3044 20.919Z"
                  fill="white"
                />
                <path
                  d="M21.4016 22.9039C21.1611 22.8309 20.932 22.7818 20.7192 22.6935C18.514 21.7786 16.4845 20.5983 14.8769 18.7889C13.9627 17.76 13.2471 16.5984 12.6423 15.3691C12.3555 14.7861 12.1137 14.1803 11.8673 13.5785C11.6427 13.0296 11.9736 12.4626 12.322 12.0491C12.649 11.661 13.0697 11.364 13.5254 11.1451C13.881 10.9742 14.2318 11.0727 14.4915 11.3741C15.053 12.0258 15.5688 12.7109 15.9864 13.4663C16.2432 13.9309 16.1728 14.4989 15.7073 14.8151C15.5942 14.892 15.4911 14.9822 15.3857 15.069C15.2933 15.1451 15.2063 15.2219 15.143 15.3249C15.0272 15.5134 15.0217 15.7357 15.0962 15.9406C15.6702 17.518 16.6376 18.7445 18.2253 19.4051C18.4793 19.5108 18.7345 19.6339 19.0271 19.5998C19.5173 19.5425 19.676 19.0049 20.0194 18.724C20.3552 18.4495 20.7842 18.4458 21.1458 18.6747C21.5075 18.9036 21.8582 19.1494 22.2067 19.3977C22.5488 19.6415 22.8895 19.88 23.205 20.1579C23.5085 20.4251 23.613 20.7757 23.4421 21.1384C23.1293 21.8025 22.6741 22.3551 22.0175 22.7078C21.8321 22.8073 21.6107 22.8395 21.4016 22.9039C21.6107 22.8395 21.1611 22.8308 21.4016 22.9039Z"
                  fill="white"
                />
                <path
                  d="M18.0054 10.385C20.8899 10.4658 23.259 12.3801 23.7667 15.2317C23.8532 15.7176 23.884 16.2144 23.9224 16.7076C23.9386 16.915 23.8212 17.1121 23.5973 17.1148C23.3661 17.1176 23.262 16.9241 23.247 16.7168C23.2173 16.3063 23.1967 15.894 23.1402 15.487C22.8416 13.3383 21.1282 11.5606 18.9894 11.1791C18.6676 11.1217 18.3382 11.1066 18.0122 11.0724C17.8061 11.0508 17.5362 11.0383 17.4905 10.7821C17.4522 10.5673 17.6335 10.3963 17.838 10.3853C17.8936 10.3822 17.9495 10.3848 18.0054 10.385C17.9495 10.3848 20.8899 10.4658 18.0054 10.385Z"
                  fill="white"
                />
                <path
                  d="M22.3894 16.0679C22.3847 16.1039 22.3821 16.1886 22.361 16.2684C22.2845 16.558 21.8454 16.5942 21.7443 16.3019C21.7144 16.2152 21.7099 16.1165 21.7097 16.0232C21.7087 15.4122 21.5759 14.8019 21.2678 14.2704C20.9511 13.724 20.4673 13.2648 19.8998 12.9869C19.5567 12.8189 19.1856 12.7144 18.8095 12.6522C18.6451 12.625 18.479 12.6085 18.3138 12.5855C18.1136 12.5577 18.0067 12.4301 18.0162 12.2329C18.0251 12.048 18.1601 11.9151 18.3616 11.9265C19.0235 11.9641 19.6629 12.1071 20.2514 12.4188C21.4482 13.0525 22.1318 14.0529 22.3313 15.3887C22.3403 15.4492 22.3549 15.5092 22.3595 15.5699C22.3707 15.7199 22.3779 15.8701 22.3894 16.0679C22.3779 15.8701 22.3847 16.1039 22.3894 16.0679Z"
                  fill="white"
                />
                <path
                  d="M20.5956 15.9979C20.3542 16.0023 20.2251 15.8687 20.2002 15.6474C20.1829 15.4931 20.1692 15.3368 20.1324 15.1867C20.0599 14.8911 19.9028 14.6172 19.6541 14.436C19.5367 14.3505 19.4037 14.2882 19.2644 14.248C19.0873 14.1969 18.9035 14.2109 18.7269 14.1676C18.5351 14.1206 18.429 13.9653 18.4592 13.7854C18.4866 13.6216 18.6459 13.4938 18.8248 13.5068C19.9432 13.5875 20.7424 14.1657 20.8565 15.4822C20.8645 15.5751 20.874 15.6733 20.8534 15.7621C20.8181 15.9143 20.7055 15.9905 20.5956 15.9979C20.7055 15.9905 20.3542 16.0023 20.5956 15.9979Z"
                  fill="white"
                />
              </svg>
            </a>
            <a className="nav__info-whatsapp" href="https://wa.me/+70000000000">
              <svg
                width="36"
                height="36"
                viewBox="0 0 36 36"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clipPath="url(#clip0_488_160)">
                  <path
                    d="M35.9895 0H0.0105469C0.004722 0 0 0.004722 0 0.0105469V35.9895C0 35.9953 0.004722 36 0.0105469 36H35.9895C35.9953 36 36 35.9953 36 35.9895V0.0105469C36 0.004722 35.9953 0 35.9895 0Z"
                    fill="#25D366"
                  />
                  <path
                    d="M8.64888 27.6331L9.63326 23.0628C8.36805 21.0672 7.87449 18.6786 8.24517 16.345C8.61586 14.0114 9.82532 11.8932 11.6466 10.3879C13.468 8.88262 15.776 8.09364 18.1376 8.169C20.4993 8.24436 22.7523 9.17888 24.4739 10.7972C26.1956 12.4156 27.2675 14.6065 27.4887 16.959C27.7098 19.3115 27.065 21.6638 25.6751 23.5747C24.2853 25.4855 22.2459 26.8236 19.9397 27.3378C17.6334 27.852 15.2188 27.507 13.1489 26.3675L8.64888 27.6331Z"
                    fill="#25D366"
                    stroke="white"
                    strokeWidth="2.03125"
                  />
                  <path
                    d="M21.656 19.1952C21.4451 19.0546 21.2342 18.9843 21.0232 19.2655L20.588 19.8458C20.3176 20.2063 19.9497 20.6624 19.5467 20.4608C18.5463 19.9273 17.1664 19.3305 15.9469 17.4705C15.8123 17.2651 15.6691 16.989 15.7994 16.7809C15.8937 16.6302 16.0092 16.5182 16.1053 16.3687L16.3445 15.9966C16.5101 15.7391 16.7304 15.4612 16.5935 15.1874L15.7498 13.1483C15.5389 12.5858 15.3279 12.6561 15.117 12.6561H14.5545C14.4139 12.6561 14.1326 12.7264 13.8514 13.0077C12.3045 14.5546 12.9373 16.7343 14.0623 18.1405C14.2732 18.4218 15.6795 20.953 18.7029 22.2889C20.9529 23.2733 21.4451 23.1327 22.0779 22.9921C22.6939 22.9361 23.3098 22.5233 23.7127 22.0379C23.9101 21.8 24.0351 21.5117 24.1216 21.2149C24.2192 20.8801 24.2954 20.4797 24.117 20.3905"
                    fill="white"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_488_160">
                    <rect width="36" height="36" rx="5" fill="white" />
                  </clipPath>
                </defs>
              </svg>
            </a>
          </div>

          <ul className="nav__box">
            {navArrNew.map((value, id) => {
              if (value.subMenu) return null;
              return (
                <li
                  className={'nav__item'}
                  key={id}
                  onClick={changeActiveSubMenu}
                >
                  <NavLink
                    to={value.path}
                    className={({ isActive }) =>
                      isActive
                        ? `nav__link ${
                            value.mainMenu
                              ? 'nav__link_active-main'
                              : 'nav__link_active'
                          } nav__link_backgraund`
                        : `nav__link nav__link_backgraund`
                    }
                    onClick={
                      (!value.mainMenu && changeMenu) || changeDropDownMenu
                    }
                  >
                    {value.breadcrumb}
                    {value.mainMenu && (
                      <svg
                        className="burger__main"
                        width="14"
                        height="12"
                        viewBox="0 0 14 12"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <rect
                          className="burger__line-1"
                          width="14"
                          height="2"
                          rx="1"
                          fill="#7D7D7D"
                        />
                        <rect
                          className="burger__line-2"
                          y="5"
                          width="14"
                          height="2"
                          rx="1"
                          fill="#7D7D7D"
                        />
                        <rect
                          className="burger__line-3"
                          y="10"
                          width="14"
                          height="2"
                          rx="1"
                          fill="#7D7D7D"
                        />
                      </svg>
                    )}
                  </NavLink>
                  {value.mainMenu && (
                    <ul className="nav__sub-menu">
                      {navArrNew.map((valueSub, id) => {
                        if (value.mainMenu === valueSub.subMenu) {
                          return (
                            <li className="nav__item-sub" key={id}>
                              <NavLink
                                to={valueSub.path}
                                onClick={changeMenu}
                                className={({ isActive }) =>
                                  isActive
                                    ? 'nav__link nav__link_sum-menu nav__link_active'
                                    : 'nav__link nav__link_sum-menu'
                                }
                              >
                                {valueSub.breadcrumb}
                              </NavLink>
                            </li>
                          );
                        }
                        return null;
                      })}
                    </ul>
                  )}
                </li>
              );
            })}
          </ul>
        </div>
      </nav>
    </section>
  );
};

export default NavMobil;
